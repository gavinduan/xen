<?xml version="1.0" standalone="no"?>

<kickstart>


<description>
</description>


<copyright>
Copyright (c) 2000 - 2007 The Regents of the University of California.
All rights reserved. Rocks(tm) v4.3 www.rocksclusters.org
</copyright>


<changelog>
$Log: xen-base.xml,v $
Revision 1.38  2012/01/13 21:40:49  phil
Looks like vlan and mtu fixes have made it into the mainline code as of 5.7

Revision 1.37  2011/10/03 21:35:13  phil
Firewall rule fix (add rulename and source)
Fix for 9000 Byte bridged interfaces. (should be fixed when centos 5.8 is out)

Revision 1.36  2011/01/19 22:44:40  bruno
no longer need 'rocks-create-vlan'.

the xen folks have fixed their bug and now we can add vlans on-the-fly on a
xen kernel just like you can on a non-xen kernel.

Revision 1.35  2011/01/12 21:01:12  bruno
added a report to create the xendomains configuration file

nuked vm-container.xml and vm-container-client.xml. we don't need these
since xen-enabled nodes are now configured with the xen attribute.

Revision 1.34  2011/01/10 21:00:38  bruno
need to touch /var/lock/subsys/xendomains in order to save running VMs

Revision 1.33  2009/10/08 18:27:06  bruno
it turns out that the frontend needs dom0-min-mem set too.

Revision 1.32  2009/10/06 22:48:32  bruno
phil's phixes to the xen bridge bring up code.

Revision 1.31  2009/10/03 00:19:41  bruno
can build compute nodes with RHEL 5.4

Revision 1.30  2009/05/26 21:25:07  bruno
increase cert expirations to 10 years

Revision 1.29  2009/05/07 23:38:41  bruno
set Xen_Dom0MinMem on the frontend too.

Revision 1.28  2009/05/07 22:30:33  bruno
get the certs built correctly for libvirtd

Revision 1.27  2009/05/04 21:11:50  bruno
speed up certtool

Revision 1.26  2009/04/08 22:27:58  bruno
retool the xen commands to use libvirt

Revision 1.25  2009/03/06 21:21:30  bruno
updated for host attributes

Revision 1.24  2009/01/23 21:24:26  bruno
replaced var tags with entities

Revision 1.23  2008/11/21 18:37:29  bruno
make sure 'rocks report host xen bridge' is called when a frontend is
installing.

this properly sets up the xen bridge on the frontend that uses a restore roll.

Revision 1.22  2008/09/22 18:12:35  bruno
added script to create vlans with xen bridges

Revision 1.21  2008/09/06 00:37:13  bruno
another attempt at getting dom0-min-mem set

Revision 1.20  2008/09/05 20:46:02  bruno
another wack at trying to get dom0-min-mem set on the frontend

Revision 1.19  2008/08/29 18:58:51  phil
add rocks-pygrub package

Revision 1.18  2008/08/20 22:52:58  bruno
install a virtual cluster of any size in 6 simple steps!

Revision 1.17  2008/08/18 17:44:48  bruno
cleanup

Revision 1.16  2008/08/14 23:02:19  phil
Create the rocks-network-bridge when kickstarting

Revision 1.15  2008/08/14 16:17:19  phil
Control how much memory is reserved for Dom0 via a rocks var

Revision 1.14  2008/07/29 16:47:24  bruno
more vlan support for xen VMs

Revision 1.13  2008/07/22 00:16:20  bruno
support for VLANs

Revision 1.12  2008/04/17 22:59:42  bruno
move the bootflag setting into xen-server.xml

Revision 1.11  2008/03/25 19:18:08  bruno
make sure all the kernel packages get put on the OS roll.

Revision 1.10  2008/02/21 21:37:55  bruno
set the global bootflags to restrict dom0 to 1024 MB

Revision 1.9  2008/02/12 00:01:25  bruno
fixes

Revision 1.8  2008/02/07 20:34:00  bruno
give DOM0 only 1 cpu

Revision 1.7  2008/02/01 21:38:54  bruno
closer

Revision 1.6  2007/12/03 19:48:51  bruno
xen for V

Revision 1.5  2007/06/23 04:04:07  mjk
mars hill copyright

Revision 1.4  2006/09/11 22:50:48  mjk
monkey face copyright

Revision 1.3  2006/08/10 00:12:24  mjk
4.2 copyright

Revision 1.2  2005/12/30 16:47:30  mjk
copyrights in place

Revision 1.1  2005/12/17 05:27:19  mjk
*** empty log message ***
</changelog>


<package>xen</package>
<package>kernel-xen</package>
<package>kernel-xen-devel</package>
<package>virt-manager</package>
<package>rocks-boot-xen</package>
<package>rocks-pygrub</package>
<package>gnutls-utils</package>


<post>

MINMEM=&Xen_Dom0MinMem;

<!-- we need this case below for a frontend install -->
if [ "$MINMEM" == "" ]
then
	MINMEM=`/opt/rocks/bin/rocks list attr | grep Xen_Dom0MinMem | awk '{print $2}'`
fi

<file name="/etc/xen/xend-config.sxp">
(xend-unix-server yes)
(xend-unix-path /var/lib/xend/xend-socket)
(xend-relocation-hosts-allow '^localhost$ ^localhost\\.localdomain$')
(network-script 'rocks-network-bridge')
(vif-script vif-bridge) 
(vncpasswd '')
</file>

echo "(dom0-min-mem $MINMEM)" &gt;&gt; /etc/xen/xend-config.sxp

</post>


<post>
<!-- increase the max number of virtual interfaces that can be created -->

<file name="/etc/modprobe.conf" mode="append">
options netloop nloopbacks=32
</file>

</post>


<post>


<file name="/etc/xen/scripts/rocks-network.sh" perms="755">
<![CDATA[#!/bin/sh
# ROCKS
is_vlan() {
    [ -f /proc/net/vlan/$1 ]
}
get_mtu() {
	ip link show $1 | sed -e '1q' | cut -d ' ' -f 5
}
set_mtu() {
	ip link set $1 mtu $2 
	logger -p local0.info "Network Bridge: set MTU $1 to $2"
}

set_mtu_postfacto () {
/usr/bin/at now + 2 minutes > /dev/null 2>&1 << ATEOF
/sbin/ip link set $1 mtu $2 
/bin/logger -p local0.info "$3: Postfacto set MTU $1 to $2"
ATEOF
}

store_bridge_mtu () {
bridgename=`echo -n $1 | tr . _`
xenstore-write "/local/domain/${bridgename}_mtu" $2
}

read_bridge_mtu () {
bridgename=`echo -n $1 | tr . _`
xenstore-read "/local/domain/${bridgename}_mtu" 
}
# ROCKS
]]>
</file>

</post>


<!-- set up access to libvirt -->

<post>

<file name="/etc/sysconfig/libvirtd">
LIBVIRTD_ARGS="--listen"
</file>

</post>

<post>

<!-- create a client cert -->

mkdir -p /etc/pki/libvirt/private

<!-- speed up certtool -->
mv /dev/random /dev/random.orig
ln -s /dev/urandom /dev/random


/usr/bin/certtool --generate-privkey > /etc/pki/libvirt/private/clientkey.pem

<file name="/tmp/client.info">
organization = &Info_CertificateOrganization;
cn = &hostname;
expiration_days = 3650
tls_www_client
encryption_key
signing_key
</file>

/usr/bin/certtool --generate-certificate \
	--load-privkey /etc/pki/libvirt/private/clientkey.pem \
	--load-ca-certificate /etc/pki/CA/cacert.pem \
	--load-ca-privkey /tmp/cakey.pem \
	--template /tmp/client.info --outfile /etc/pki/libvirt/clientcert.pem


/bin/rm -f /tmp/client.info

</post>


<post>

<!-- now create a server cert -->

/usr/bin/certtool --generate-privkey > /etc/pki/libvirt/private/serverkey.pem

<file name="/tmp/server.info">
organization = &Info_CertificateOrganization;
cn = &hostname;
expiration_days = 3650
tls_www_server
encryption_key
signing_key
</file>

/usr/bin/certtool --generate-certificate \
	--load-privkey /etc/pki/libvirt/private/serverkey.pem \
	--load-ca-certificate /etc/pki/CA/cacert.pem \
	--load-ca-privkey /tmp/cakey.pem \
	--template /tmp/server.info --outfile /etc/pki/libvirt/servercert.pem

/bin/rm -f /tmp/server.info
/bin/rm -f /tmp/cakey.pem


<!-- restore original system -->
rm /dev/random
mv /dev/random.orig /dev/random

</post>


<post>

<!--
	there is a bug in the xendomains startup script. if there are no
	"saved" VMs (previously running VMs that were saved on shutdown),
	then the script never touches the /var/lock/subsys/xendomains
	file. this means that after a vm container is first installed, the
	/var/lock/subsys/xendomains file will not exist and if a VM is
	running when the container is shutdown, the xendomains 'stop' script
	will not be run and the running VM will not be saved, thus the
	running VM will not be restarted when the container is rebooted.
-->

<file name="/etc/rc.d/rocksconfig.d/post-50-xendomains" perms="755">
#!/bin/bash

touch /var/lock/subsys/xendomains
</file>
</post>


<post>
mkdir -p /etc/xen/rocks
</post>


</kickstart>

