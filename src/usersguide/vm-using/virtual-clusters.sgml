<section id="using-virtual-clusters" xreflabel="Installing Virtual Clusters">
	<title>Installing Virtual Clusters</title>

<section id="provisioning-virtual-cluster"
	xreflabel="Provisioning a Virtual Cluster">
	<title>Provisioning a Virtual Cluster</title>

<para>
After you install a VM Server and at least one VM Container, you are ready
to provision a virtual cluster.
</para>

<para>
We'll use the following illustration as a guide to help keep track of the
names of the physical machines and the virtual machines.
</para>

<para>
<mediaobject>
	<imageobject>
		<imagedata fileref="images/virtual-cluster.png" scale=50>
	</imageobject>
</mediaobject>
</para>

<para>
In the above picture, "espresso.rocksclusters.org" is a physical machine.
Also, "vm-container-0-0" and "vm-container-0-1" are physical machines that
were kickstarted by "espresso".
The machine "frontend-0-0-0" is a virtual machine that is hosted by
"espresso".
The machines "hosted-vm-0-0-0" and "hosted-vm-0-1-0" are VMs that are
associated with "frontend-0-0-0" (they are all in the same VLAN).
</para>

<para>
The names "frontend-0-0-0", "hosted-vm-0-0-0" and "hosted-vm-0-1-0" are
names used by Dom0 (the physical machines).
The names for the same machines, but this time from the perspective of DomU
(the virtual machine perspective) are "vi-1.rocksclusters.org", "compute-0-0"
and "compute-0-1".
</para>

<note>
<para>
An important point is that the only common thing between the physical side
and the virtual side is the MAC address (in green).
We will use the MAC address of a virtual machine to control it (e.g., to
initially power it on).
</para>
</note>

<para>
The names in the virtual cluster look like the names in a traditional
cluster -- the frontend is named "vi-1.rocksclusters.org" and its compute
nodes are named "compute-0-0" and "compute-0-1".
If you login to "vi-1.rocksclusters.org", you would be hard pressed to tell
the difference between this virtual cluster and a traditional physical cluster.
</para>

<warning>
<para>
You must select your own FQDN and IP address for your virtual frontend.
The FQDN "vi-1.rocksclusters.org" and the IP address "137.110.119.118" are
managed by UCSD and should not be used by you.
</para>

<para>
They are only used here to show you a concrete example.
</para>
</warning>

<para>
First, we'll add a virtual cluster to the VM Server's database.
In this example, we'll add a frontend with the FQDN of
"vi-1.rocksclusters.org", IP of "137.110.119.118" and we'll associate
2 compute nodes with it:
</para>

<screen>
# rocks add cluster fqdn="vi-1.rocksclusters.org" ip="137.110.119.118" num-computes=2
</screen>

<para>
The above command will take some time and then output something similar to:
</para>

<screen>
created frontend VM named: frontend-0-0-0 
	created compute VM named: hosted-vm-0-0-0
	created compute VM named: hosted-vm-0-1-0
</screen>

<para>
The command adds entries to the database for the above nodes and establishes
a VLAN that will be used for the private network (eth0 inside the VM).
</para>

<para>
Info about all the defined clusters on the VM Server (including the
physical cluster) can be obtained with the command:
<computeroutput>rocks list cluster</computeroutput>:
</para>

<screen>
# rocks list cluster
FRONTEND                    CLIENT NODES     TYPE    
espresso.rocksclusters.org: ---------------- physical
:                           vm-container-0-0 physical
:                           vm-container-0-1 physical
vi-1.rocksclusters.org:     ---------------- VM      
:                           hosted-vm-0-0-0  VM      
:                           hosted-vm-0-1-0  VM
</screen>

</section>


<section id="creating-keys"
	xreflabel="Creating an RSA Key Pair">
	<title>Creating an RSA Key Pair</title>

<para>
Before we can install a VM, we must create an RSA key pair.
These keys will be used to authenticate VM control commands.
To create a key pair, execute:
</para>

<screen>
# rocks create keys key=/root/private.key
</screen>

<para>
The above command will ask for a pass phrase for the private key.
If you would like a "passphraseless" private key, execute:
</para>

<screen>
# rocks create keys key=/root/private.key passphrase=no
</screen>

<para>
The above command will place your private key into the file /root/private.key
and it will output the public key for your private key:
</para>

<screen>
# rocks create keys key=/root/private.key
Generating RSA private key, 1024 bit long modulus
............++++++
.......++++++
e is 65537 (0x10001)
Enter pass phrase for /root/private.key:
Verifying - Enter pass phrase for /root/private.key:
Enter pass phrase for /root/private.key:
writing RSA key
-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMoCPmR/Kev64znRBxvtsniXIF
dyQMxR/bBFKNDmvmzPuPUim5jmD3TLilnH75/KidtJCwlb+Lhr5Cs6/9sRzX6rX2
ExVUZsgo4A+O+XMk8KeowO/c2rPc+YdXaBir3Aesm/MCfCZaidZae8QLmVKW7Va5
qErl9gyhhR7uDX+hgwIDAQAB
-----END PUBLIC KEY-----
</screen>

<para>
Now save the public key to file, that is, copy the above public key:
</para>

<screen>
-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMoCPmR/Kev64znRBxvtsniXIF
dyQMxR/bBFKNDmvmzPuPUim5jmD3TLilnH75/KidtJCwlb+Lhr5Cs6/9sRzX6rX2
ExVUZsgo4A+O+XMk8KeowO/c2rPc+YdXaBir3Aesm/MCfCZaidZae8QLmVKW7Va5
qErl9gyhhR7uDX+hgwIDAQAB
-----END PUBLIC KEY-----
</screen>

<para>
And save your public key into a file (e.g., /root/public.key).
</para>

<para>
We now want to associate your public key with the virtual cluster you
provisioned.
This will allow you to use your private key to send authenticated commands
to control your cluster.
To associate your public key with your virtual cluster, execute:
</para>

<screen>
# rocks add host key vi-1.rocksclusters.org key=/root/public.key
</screen>

<para>
We can see the relationship by executing:
</para>

<screen>
# rocks list host key
HOST            ID PUBLIC KEY                                                      
frontend-0-0-0: 7  -----BEGIN PUBLIC KEY-----                                      
:                  MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMoCPmR/Kev64znRBxvtsniXIF
:                  dyQMxR/bBFKNDmvmzPuPUim5jmD3TLilnH75/KidtJCwlb+Lhr5Cs6/9sRzX6rX2
:                  ExVUZsgo4A+O+XMk8KeowO/c2rPc+YdXaBir3Aesm/MCfCZaidZae8QLmVKW7Va5
:                  qErl9gyhhR7uDX+hgwIDAQAB                                        
:                  -----END PUBLIC KEY-----                                        
:                  ----------------------------------------------------------------
</screen>

<para>
We see that the public key is associated with "frontend-0-0-0" (the name of
the VM in Dom0).
</para>

</section>


<section id="using-virtual-clusters-frontend"
	xreflabel="Installing a VM Frontend">
	<title>Installing a VM Frontend</title>

<para>
Now, we'll want to install the virtual frontend.
But before we do that, we need to set the name of the "VM controller".
The VM controller is a service that authenticates Rocks VM control commands.
In our case, we'll set the VM controller to the FQDN of the physical
frontend:
</para>

<screen>
# rocks add host attr localhost vm-controller espresso.rocksclusters.org
</screen>

<para>
Now we can send VM control commands to our VMs.
To start the VM frontend install, we'll need to "power on" the VM frontend:
</para>

<screen>
# rocks set host power vi-1.rocksclusters.org switch=on key=/root/private.key
</screen>

<para>
Then, to connect to the VM's console, execute:
</para>

<screen>
# rocks open host console vi-1.rocksclusters.org key=/root/private.key
</screen>

<para>
Soon you will see the familiar frontend installation screen:
</para>

<para>
<mediaobject>
	<imageobject>
		<imagedata fileref="images/vm-frontend.png" scale=50>
	</imageobject>
</mediaobject>
</para>

<para>
In the "Hostname of Roll Server" field, insert the FQDN of your VM Server
(the name of the physical machine that is hosting the VM frontend).
Then click "Download".
</para>

<para>
From here, you want to follow the
<ulink url="/roll-documentation/base/&document_version;/install-frontend.html">standard procedure for bringing up a frontend</ulink> starting at Step 8.
</para>

<para>
After the VM frontend installs, it will reboot.
After it reboots, login and then we'll begin installing VM compute nodes.
</para>

</section>


<section id="using-virtual-clusters-compute"
	xreflabel="Installing VM Compute Nodes">
	<title>Installing VM Compute Nodes</title>

<para>
Login to the VM frontend (the virtual machine named "vi-1.rocksclusters.org"
in the example picture at the top of this page), and execute:
</para>

<screen>
# insert-ethers
</screen>

<para>
Select "Compute" as the appliance type.
</para>

<para>
In another terminal session on vi-1.rocksclusters.org, we'll need to set up
the environment to send VM control commands to the physical frontend.
First, put the RSA private key that we created in section
<xref linkend="creating-keys"> (e.g., /root/private.key) in /root on
vi-1.rocksclusters.org.
Then, assign the location of the VM controller to the physical frontend:
</para>

<screen>
# rocks add host attr localhost vm-controller espresso.rocksclusters.org
</screen>

<para>
Now, we're ready to install compute nodes.
But, there's a problem - when we first login to vi-1.rocksclusters.org, the
only machine we know about is ourself (i.e., vi-1.rocksclusters.org).
There are no other nodes in the database.
The good news is, we can ask the VM controller for a list of MAC addresses
that are assigned to our virtual cluster:
</para>

<screen>
# rocks list host macs vi-1.rocksclusters.org key=/root/private.key 
</screen>

<para>
Which outputs:
</para>

<screen>
MACS IN CLUSTER  
36:77:6e:c0:00:02
36:77:6e:c0:00:00
36:77:6e:c0:00:03
</screen>

<para>
The MAC address 36:77:6e:c0:00:00 is ourself (the VM frontend) and the other
two MACs (36:77:6e:c0:00:02 and 36:77:6e:c0:00:03) are the VM compute nodes
that are associated with our VM frontend.
</para>

<para>
We can use the MAC address of the VM compute nodes to power up and install our
compute nodes:
</para>

<screen>
# rocks set host power 36:77:6e:c0:00:02 key=/root/private.key action="on+install"
</screen>

<note>
<para>
The action of "on+install" ensures that the VM will be put into install mode,
then it will be powered on.
</para>
</note>

</section>

</section>

